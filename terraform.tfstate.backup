{
  "version": 4,
  "terraform_version": "1.0.6",
  "serial": 121,
  "lineage": "06da2c91-e496-f6cc-8ffa-7dd830bd1015",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_ssm_document",
      "name": "run_locust_test",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ssm:us-east-2:222617342292:document/Meena-RunLocustTest",
            "attachments_source": [],
            "content": "    {\n        \"schemaVersion\": \"2.2\",\n        \"description\": \"Run performance test using Locust infrastructure\",\n        \"parameters\": {\n            \"locustFile\": {\n                \"type\": \"String\",\n                \"description\": \"Path to the locust file including 'locustfiles/'\"\n            },\n            \"locustFileTest\": {\n                \"type\": \"StringMap\",\n                \"description\": \"Path to the locust file including 'locustfiles/'\",\n                \"default\":{\n                    \"locustfile/Onboarding/Onboarding.py\":\"100\",\n                    \"locustfile/CustomerProfile/CustomerProfile.py\":\"100\"\n                },\n                \"maxItems\":\"25\"\n            },\n            \"workers\":{\n                \"type\": \"String\",\n                \"description\": \"How many worker nodes to use\"\n            },\n            \"users\": {\n                \"type\": \"String\",\n                \"description\": \"Number of concurrent users\"\n            },\n            \"spawnRate\":{\n                \"type\": \"String\",\n                \"description\": \"The rate per second in which the users are spawned\"\n            },\n            \"stopTimeout\": {\n                \"type\": \"String\",\n                \"description\": \"Timeout before exiting after completing\"\n            },\n            \"runTime\":{\n                \"type\": \"String\",\n                \"description\": \"Stop after the specified amount of time \"\n            },\n            \"additionalTestParameters\": {\n                \"type\": \"String\",\n                \"description\": \"Any additional parameters\",\n                \"default\": \"latest\"\n            },\n            \"dockerImageTag\": {\n                \"type\": \"String\",\n                \"description\": \"Tag of the performance-test docker image to use\"\n            },\n            \"resultBucketName\":{\n                \"type\": \"String\",\n                \"description\": \"AWS Bucker name\",\n                \"default\": \"locust-results-s3-bucket\",\n                 \"allowedValues\": [\"locust-results-s3-bucket\"]\n            },\n            \"awsRegion\":{\n                \"type\": \"String\",\n                \"description\": \"Target region\",\n                \"default\": \"us-east-2\",\n                 \"allowedValues\": [\"us-east-2\"]\n            }\n        },\n        \"mainSteps\": [\n           {\n               \"action\": \"aws:runShellScript\",\n               \"name\": \"runTest\",\n               \"inputs\": {\n                \"timeoutSeconds\":\"120\",\n                \"runCommand\": [\"#!/bin/sh\\n\\nset -eo pipefail\\ntrap '[[ $BASH_COMMAND != echo* ]] \\u0026\\u0026 echo $BASH_COMMAND' DEBUG\\nLOCUST_FILE=({{locustFile}})\\nWORKERS=\\\"{{workers}}\\\"\\nUSERS=\\\"{{users}}\\\"\\nSPAWN_RATE=\\\"{{spawnRate}}\\\"\\nSTOP_TIMEOUT=\\\"{{stopTimeout}}\\\"\\nRUN_TIME=\\\"{{runTime}}\\\"\\nADDITIONAL_TEST_PARAMETERS=\\\"{{additionalTestParameters}}\\\"\\nDOCKER_IMAGE_TAG=\\\"{{dockerImageTag}}\\\"\\nRESULT_BUCKER_NAME=\\\"{{resultBucketName}}\\\"\\nAWS_RESGION=\\\"{{awsRegion}}\\\"\\n#LOCUST_FILE_TEST=echo $locustFileTest\\n\\ndeclare -A LOCUST_FILE_TEST=([\\\"locustfile/Onboarding/Onboarding.py\\\"]=\\\"100\\\")\\nLOCUST_FILE_TEST[\\\"locustfile/CustomerProfile/CustomerProfile.py\\\"]=\\\"03\\\"\\necho \\\"${!ADDITIONAL_TEST_PARAMETERS[@]}\\\"\\nfor item in \\\"${!ADDITIONAL_TEST_PARAMETERS[@]}\\\"\\ndo\\n    echo \\\"$item =\\u003e ${ADDITIONAL_TEST_PARAMETERS[$item]}\\\"\\ndone\\n\\nSAFE_LOCUSTFILE_NAME=$(echo $LOCUST_FILE | sed 's/locustfiles\\\\///' | sed 's/\\\\.py//g' | sed 's/[/ ]/-/g')\\nMASTER_CONTAINER_NAME=\\\"locust-master-$SAFE_LOCUSTFILE_NAME\\\"\\n\\n#MASTER_CONTAINER_ID=$(docker run \\\\\\n#    --rm \\\\\\n#    --detach \\\\\\n#    --name $MASTER_CONTAINER_NAME \\\\\\n#    --network=host \\\\\\n#    --env RESULT_BUCKET_NAME=$RESULT_BUCKET_NAME\\n#    --env AWS_REGION=$AWS_REGION\\n#    --env TEST_TIMESTAMP=$(date '+%Y/%m/%d/%H-%M-%S') \\\\\\n#    --env LOCUST_MASTER_BIND_PORT=5557 \\\\\\n#    --env LOCUST_LOCUSTFILE=$LOCUST_FILE\\\\\\n#    --env LOCUST_EXPECT_WORKERS=$WORKERS\\\\\\n#    --env LOCUST_USERS=$USERS\\\\\\n#    --env LOCUST_SPAWN_RATE=$SPAWN_RATE\\\\\\n#    --env LOCUST_STOP_TIMEOUT=$STOP_TIMEOUT\\\\\\n#    --env LOCUST_RUN_TIME=$RUN_TIME\\\\\\n#\\n#    $ADDITIONAL_TEST_PARAMETERS)\\n\\n#for file in \\\"${!locustFileTest[@]}\\\"\\n#do\\n#  echo \\\"$file - ${locustFileTest[$file]}\\\";\\n#  docker run \\\\\\n#        --rm \\\\\\n#        -- detach \\\\\\n#        --name $file \\\\\\n#        --network=host \\\\\\n#        --env LOCUST_LOCUSTFILE=$file \\\\\\n#        --env LOCUST_MASTER_HOST=$(curl http://localhost:8080/latest/meta-data/local-ipv4) \\\\\\n#        --env LOCUST_MASTER_PORT=5557 \\\\\\n#done\\n\\n\\nfor WORKER_NUMBER in `seq 1 $WORKERS`\\ndo\\n    echo \\\"Starting worker $WORKER_NUMBER\\\"\\n\\n    WORKER_CONTAINER_NAME=\\\"locust-worker-$SAFE_LOCUSTFILE_NAME-${MASTER_CONTAINER_ID:0:0}-$WORKER_NUMBER\\\"\\n#    docker run \\\\\\n#        --rm \\\\\\n#        -- detach \\\\\\n#        --name $WORKER_CONTAINER_NAME \\\\\\n#        --network=host \\\\\\n#        --env LOCUST_LOCUSTFILE=$LOCUST_FILE \\\\\\n#        --env LOCUST_MASTER_HOST=$(curl http://localhost:8080/latest/meta-data/local-ipv4) \\\\\\n#        --env LOCUST_MASTER_PORT=5557 \\\\\\ndone\\n\\nkeys()\\n{\\n    INPUT_DICT=(\\\"$@\\\")\\n    KEYS=()\\n    for DATA in \\\"${INPUT_DICT[@]}\\\" ; do\\n        KEYS+=(\\\"${DATA%%:*}\\\")\\n    done\\n    echo \\\"${KEYS[@]}\\\"\\n}\\n\\nvalues()\\n{\\n    INPUT_DICT=(\\\"$@\\\")\\n    VALUES=()\\n    for DATA in \\\"${INPUT_DICT[@]}\\\" ; do\\n        VALUES+=(\\\"${DATA##*:}\\\")\\n    done\\n    echo \\\"${VALUES[@]}\\\"\\n}\\n\\ncreateNodes()\\n{\\n    INPUT_DICT=(\\\"$@\\\")\\n    for DATA in \\\"${INPUT_DICT[@]}\\\" ; do\\n        LOCUST_FILE1=\\\"${DATA%%:*}\\\"\\n        USERS1=\\\"${DATA##*:}\\\"\\n        echo \\\"File: $LOCUST_FILE1\\\"\\n        echo \\\"User: $USERS1\\\"\\n        echo \\\"${DATA%%:*}:${DATA##*:}\\\"\\n    done\\n}\\n\\n#echo \\\"KEYS=$(keys \\\"${LOCUST_FILE[@]}\\\")\\\"\\n#echo \\\"VALUES=$(values \\\"${LOCUST_FILE[@]}\\\")\\\"\\ncreateNodes \\\"${LOCUST_FILE[@]}\\\"\"]\n               }\n           }\n        ]\n    }\n",
            "created_date": "2021-09-08T16:06:41Z",
            "default_version": "1",
            "description": "Run performance test using Locust infrastructure",
            "document_format": "JSON",
            "document_type": "Command",
            "document_version": "1",
            "hash": "68546bc34109bff40627fd968f039adcfc9d05c43f60dc258128f12f81e4f311",
            "hash_type": "Sha256",
            "id": "Meena-RunLocustTest",
            "latest_version": "1",
            "name": "Meena-RunLocustTest",
            "owner": "222617342292",
            "parameter": [
              {
                "default_value": "",
                "description": "Path to the locust file including 'locustfiles/'",
                "name": "locustFile",
                "type": "String"
              },
              {
                "default_value": "{\"locustfile/Onboarding/Onboarding.py\":\"100\",\"locustfile/CustomerProfile/CustomerProfile.py\":\"100\"}",
                "description": "Path to the locust file including 'locustfiles/'",
                "name": "locustFileTest",
                "type": "StringMap"
              },
              {
                "default_value": "",
                "description": "How many worker nodes to use",
                "name": "workers",
                "type": "String"
              },
              {
                "default_value": "",
                "description": "Number of concurrent users",
                "name": "users",
                "type": "String"
              },
              {
                "default_value": "",
                "description": "The rate per second in which the users are spawned",
                "name": "spawnRate",
                "type": "String"
              },
              {
                "default_value": "",
                "description": "Timeout before exiting after completing",
                "name": "stopTimeout",
                "type": "String"
              },
              {
                "default_value": "",
                "description": "Stop after the specified amount of time ",
                "name": "runTime",
                "type": "String"
              },
              {
                "default_value": "latest",
                "description": "Any additional parameters",
                "name": "additionalTestParameters",
                "type": "String"
              },
              {
                "default_value": "",
                "description": "Tag of the performance-test docker image to use",
                "name": "dockerImageTag",
                "type": "String"
              },
              {
                "default_value": "locust-results-s3-bucket",
                "description": "AWS Bucker name",
                "name": "resultBucketName",
                "type": "String"
              },
              {
                "default_value": "us-east-2",
                "description": "Target region",
                "name": "awsRegion",
                "type": "String"
              }
            ],
            "permissions": null,
            "platform_types": [
              "Linux",
              "MacOS"
            ],
            "schema_version": "2.2",
            "status": "Active",
            "tags": null,
            "tags_all": {},
            "target_type": "/AWS::EC2:Instance",
            "version_name": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "docker_container",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "attach": false,
            "bridge": "",
            "capabilities": [],
            "command": [
              "nginx",
              "-g",
              "daemon off;"
            ],
            "container_logs": null,
            "cpu_set": "",
            "cpu_shares": 0,
            "destroy_grace_seconds": null,
            "devices": [],
            "dns": [],
            "dns_opts": [],
            "dns_search": [],
            "domainname": "",
            "entrypoint": [
              "/docker-entrypoint.sh"
            ],
            "env": [],
            "exit_code": null,
            "gateway": "172.17.0.1",
            "group_add": [],
            "healthcheck": [],
            "host": [],
            "hostname": "8d9fbefc8210",
            "id": "8d9fbefc82104756a2ba5986ee5ca2f7b8568813e85e2e73de43d30d1e0dabaf",
            "image": "sha256:822b7ec2aaf2122b8f80f9c7f45ca62ea3379bf33af4e042b67aafbf6eac1941",
            "init": false,
            "ip_address": "172.17.0.2",
            "ip_prefix_length": 16,
            "ipc_mode": "private",
            "labels": [],
            "links": [],
            "log_driver": "json-file",
            "log_opts": {},
            "logs": false,
            "max_retry_count": 0,
            "memory": 0,
            "memory_swap": 0,
            "mounts": [],
            "must_run": true,
            "name": "tutorial",
            "network_alias": null,
            "network_data": [
              {
                "gateway": "172.17.0.1",
                "global_ipv6_address": "",
                "global_ipv6_prefix_length": 0,
                "ip_address": "172.17.0.2",
                "ip_prefix_length": 16,
                "ipv6_gateway": "",
                "network_name": "bridge"
              }
            ],
            "network_mode": "default",
            "networks": null,
            "networks_advanced": [],
            "pid_mode": "",
            "ports": [
              {
                "external": 8000,
                "internal": 80,
                "ip": "0.0.0.0",
                "protocol": "tcp"
              }
            ],
            "privileged": false,
            "publish_all_ports": false,
            "read_only": false,
            "remove_volumes": true,
            "restart": "no",
            "rm": false,
            "security_opts": [],
            "shm_size": 64,
            "start": true,
            "stdin_open": false,
            "sysctls": {},
            "tmpfs": {},
            "tty": false,
            "ulimit": [],
            "upload": [],
            "user": "",
            "userns_mode": "",
            "volumes": [],
            "working_dir": ""
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "docker_image.nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "docker_image",
      "name": "nginx",
      "provider": "provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "build": [],
            "force_remove": null,
            "id": "sha256:822b7ec2aaf2122b8f80f9c7f45ca62ea3379bf33af4e042b67aafbf6eac1941nginx:latest",
            "keep_locally": false,
            "latest": "sha256:822b7ec2aaf2122b8f80f9c7f45ca62ea3379bf33af4e042b67aafbf6eac1941",
            "name": "nginx:latest",
            "output": null,
            "pull_trigger": null,
            "pull_triggers": null,
            "repo_digest": "nginx@sha256:a05b0cdd4fc1be3b224ba9662ebdf98fe44c09c0c9215b45f84344c12867002e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
